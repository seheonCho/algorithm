package boj.자료구조;import java.io.*;import java.util.Deque;import java.util.LinkedList;public class 큐_2 {    static Deque<Integer> queue = new LinkedList<>();    public static void main(String[] args) throws IOException {        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        StringBuilder sb = new StringBuilder();        int N = Integer.parseInt(br.readLine());        for (int i = 0; i < N; i++) {            String input = br.readLine();            switch (input) {                case "pop":                    if (queue.isEmpty()) {                        sb.append("-1").append('\n');                    } else {                        sb.append(queue.getLast()).append('\n');                        queue.removeLast();                    }                    break;                case "size":                    sb.append(queue.size()).append('\n');                    break;                case "empty":                    if (queue.isEmpty()) {                        sb.append('1').append('\n');                    } else {                        sb.append('0').append('\n');                    }                    break;                case "front":                    if (queue.isEmpty()) {                        sb.append("-1").append('\n');                    } else {                        sb.append(queue.getLast()).append('\n');                    }                    break;                case "back":                    if (queue.isEmpty()) {                        sb.append("-1").append('\n');                    } else {                        sb.append(queue.getFirst()).append('\n');                    }                    break;                default:                    queue.push(Integer.parseInt(input.split(" ")[1]));                    break;            }        }        System.out.println(sb);    }}